{"version":3,"sources":["components/InputComponent.tsx","components/TodoComponent.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["InputComponent","todo","setTodo","handleAdd","inputRef","useRef","className","onSubmit","e","current","blur","type","ref","value","onChange","target","placeholder","TodoComponent","setTodos","todos","useState","edit","setEdit","editTodo","setEditTodo","useEffect","focus","id","preventDefault","map","handleEdit","isDone","onClick","filter","TodoList","App","console","log","Date","now","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.684d105a.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\n\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n  todo: string;\r\n  setTodo: React.Dispatch<React.SetStateAction<string>>;\r\n  handleAdd: (e: React.FormEvent) => void;\r\n}\r\n\r\nconst InputComponent: React.FC<Props> = ({\r\n  todo,\r\n  setTodo,\r\n  handleAdd,\r\n}: Props) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  return (\r\n    <form\r\n      className='input'\r\n      onSubmit={(e) => {\r\n        handleAdd(e);\r\n        inputRef.current?.blur();\r\n      }}>\r\n      <input\r\n        type='input'\r\n        ref={inputRef}\r\n        value={todo}\r\n        onChange={(e) => setTodo(e.target.value)}\r\n        placeholder='Enter a task'\r\n        className='input__box'\r\n      />\r\n      <button type='submit' className='input__submit'>\r\n        Go\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputComponent;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai';\r\nimport { MdDone } from 'react-icons/md';\r\nimport './styles.css';\r\n\r\nimport { Todo } from '../model';\r\n\r\ninterface Props {\r\n  todo: Todo;\r\n  todos: Todo[];\r\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\r\n}\r\n\r\nconst TodoComponent = ({ todo, setTodos, todos }: Props) => {\r\n  const [edit, setEdit] = useState<boolean>(false);\r\n  const [editTodo, setEditTodo] = useState<string>(todo.todo);\r\n\r\n  const handleDone = (id: number) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, isDone: !todo.isDone } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDelete = (id: number) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const handleEdit = (e: React.FormEvent, id: number) => {\r\n    e.preventDefault();\r\n\r\n    setTodos(\r\n      todos.map((todo) => (todo.id === id ? { ...todo, todo: editTodo } : todo))\r\n    );\r\n\r\n    setEdit(false);\r\n  };\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, [edit]);\r\n\r\n  return (\r\n    <form className='todo__component' onSubmit={(e) => handleEdit(e, todo.id)}>\r\n      {edit ? (\r\n        <input\r\n          value={editTodo}\r\n          onChange={(e) => setEditTodo(e.target.value)}\r\n          ref={inputRef}\r\n          className='todo__component--text'\r\n        />\r\n      ) : todo.isDone ? (\r\n        <s className='todo__component--text'>{todo.todo}</s>\r\n      ) : (\r\n        <span className='todo__component--text'>{todo.todo}</span>\r\n      )}\r\n\r\n      <div>\r\n        <span\r\n          className='icon'\r\n          onClick={() => {\r\n            if (!edit && !todo.isDone) {\r\n              setEdit(!edit);\r\n            }\r\n          }}>\r\n          <AiFillEdit />\r\n        </span>\r\n        <span className='icon' onClick={() => handleDelete(todo.id)}>\r\n          <AiFillDelete />\r\n        </span>\r\n        <span className='icon' onClick={() => handleDone(todo.id)}>\r\n          <MdDone />\r\n        </span>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoComponent;\r\n","import React from 'react';\r\n\r\nimport { Todo } from '../model';\r\nimport './styles.css';\r\nimport TodoComponent from './TodoComponent';\r\n\r\ninterface Props {\r\n  todos: Todo[];\r\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\r\n}\r\n\r\nconst TodoList: React.FC<Props> = ({ todos, setTodos }: Props) => {\r\n  return (\r\n    <div className='todos'>\r\n      {todos.map((todo) => {\r\n        return (\r\n          <TodoComponent\r\n            todo={todo}\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            key={todo.id}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from 'react';\n\nimport InputComponent from './components/InputComponent';\nimport TodoList from './components/TodoList';\nimport { Todo } from './model';\n\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [todo, setTodo] = useState<string>('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const handleAdd = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (todo) {\n      setTodos([...todos, { todo: todo, isDone: false, id: Date.now() }]);\n      setTodo('');\n    }\n  };\n\n  console.log(todos);\n\n  return (\n    <div className='App'>\n      <header>Tasks</header>\n      <InputComponent todo={todo} setTodo={setTodo} handleAdd={handleAdd} />\n      <TodoList todos={todos} setTodos={setTodos} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root') as HTMLElement\n);\n\n"],"sourceRoot":""}